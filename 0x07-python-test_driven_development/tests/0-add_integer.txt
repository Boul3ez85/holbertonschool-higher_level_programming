Importing the function from the module:
    >>> add_integer = __import__("0-add_integer").add_integer

Checks: module docstring:
    >>> x = __import__("0-add_integer").__doc__
    >>> len(x) > 1
    True

Check: function docstring:
    >>> f = __import__("0-add_integer").add_integer.__doc__
    >>> len(f) > 1
    True

Check: Regular tests passed:
    >>> add_integer(4, 98)
    102

Check: negative with positive
    >>> add_integer(-5, 2)
    -3

Check: positive with negative
    >>> add_integer(3, -1)
    2

check: float with int:
    >>> add_integer(2.1, 4)
    6

Check: int with float:
    >>> add_integer(4, 3.6)
    7

Check: both float:
    >>> add_integer(4.2, 9.1)
    13

Check: passed Boolean as b:
    >>> add_integer(2, True)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Check: passed None as b:
    >>> add_integer(2, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Check: passing 0 as a:
    >>> add_integer(0, 3)
    3

Check: passing 0 as b and a:
    >>> add_integer(0, 0)
    0
